image: alpine
before_script:
   - apk --update add openssh-client git bash curl
   - /bin/bash -c "uptime ; curl -s ifconfig.co"
#  - /bin/bash -c "test -d $HOME && (test -d ${HOME}/.ssh || mkdir -p  $HOME/.ssh) || mkdir -p  $HOME/.ssh "
#  - ssh-keyscan -t rsa,dsa,ecdsa github.com >> ~/.ssh/ssh_known_hosts
stages:
  - init
  - mirror


variables:
  MIRROR_REPOSITORY: "git@github.com:thefoundation-builder/$CI_PROJECT_NAME.git"
  RUNNER_REPO: thefoundation-builder/gitlab-ci-runner
  GIT_SUBMODULE_STRATEGY: recursive
#  DOCKER_HOST: tcp://docker:2375/
##  DOCKER_TLS_VERIFY: 0
#  DOCKER_TLS_CERTDIR: ""
#  DOCKER_DRIVER: overlay2



requestrunner:
  stage: init
  image: ghcr.io/thefoundation-builder/alpine-ci-minimal:latest
  #image: alpine
  when: delayed
  start_in: 1 s
  only:
  - master
  script:
#      - docker ps -a 
      - bash _0_request-runner.sh "${GITHUB_RUNNER_TOKEN}" "${RUNNER_REPO}" "${CI_PIPELINE_ID}" "${CI_PROJECT_PATH_SLUG}_${CI_COMMIT_SHORT_SHA}"



mirror-github:
  stage: mirror
  cache: {}
  when: delayed
  start_in: 42 s
  tags:
    - docker
    - linux
    - "${CI_PROJECT_PATH_SLUG}_${CI_COMMIT_SHORT_SHA}"

  only:
    refs:
      - main
      - master
  script:
    # set our privkey
    - echo "${GITHUB64_KEY}" |base64 -d > mybasekey
    # Do a mirror clone of the repository
    -  git clone --mirror $CI_REPOSITORY_URL
    # Mirror push it to the destination
    -  test -e $CI_PROJECT_NAME && cd $CI_PROJECT_NAME;test -e $CI_PROJECT_NAME.git &&  cd $CI_PROJECT_NAME.git ; ssh-agent bash -c " chmod 0600 ../mybasekey ;ssh-add ../mybasekey ;test -d $HOME && (test -d ${HOME}/.ssh || mkdir -p  $HOME/.ssh) || mkdir -p  $HOME/.ssh;(ssh-keyscan -t rsa,dsa,ecdsa github.com  ;ssh-keyscan -t rsa,dsa,ecdsa gitlab.com ) |tee  ~/.ssh/known_hosts ~/.ssh/ssh_known_hosts ;git push --force --mirror $MIRROR_REPOSITORY "
    - cd ..; rm -rf $CI_PROJECT_NAME.git $CI_PROJECT_NAME.git mybasekey
